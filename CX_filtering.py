import gzip
import sys
import os


def extract_context(file_path, context='CH', write_to_output = True):
    """
    :param file_path: file to be extracted, should be gzipped.
    :param context: Methylated context to extract, could be CG, CHH, CHG, CH, or C
    :param write_to_output: If true a csv file of extracted data will be generated
    :return:
    """

    # open the gzipped file and find rows with matching context
    with gzip.open(file_path, 'rt') as file:

        extracted_data = []

        if write_to_output:
            fname, ext = os.path.splitext(file_path)
            output = open(str(fname +'_extracted.csv'), 'w')
            output.write(",".join(['chromosome', 'location', 'strand', 'methylated_ratio', 'coverage_depth', 'context']))
            output.write("\n")

        for line in file:
            data = line.split()
            data_context = data[5]
            if context in data_context:
                chrom = data[0]
                location = data[1]
                strand = data[2]
                methyl = int(data[3])
                unmethyl = int(data[4])
                pct_methyl = methyl/(methyl+unmethyl)
                depth_coverage = methyl + unmethyl
                tri_nuc = data[6]

                out_data = [chrom, location, strand, str(pct_methyl), str(depth_coverage), tri_nuc]
                extracted_data.append(out_data)

                if write_to_output:
                    out_line = ",".join(out_data)
                    output.write(out_line)
                    output.write('\n')
        if write_to_output:
            output.close()

    return extracted_data


def bin_cx_data(extracted_data, bin_size = 200):
    """
    :param extracted_data: list of lists generated by extract_data()
    :return:
    """

    for data in extracted_data:


if __name__ == "__main__":

    input_file = sys.argv[1] # change later to use arg parser

    filename, extension = os.path.splitext(input_file)
    if extension != '.gz':
        raise ValueError("Make sure your file is gzipped and has extension .gz"
                         )
    extract_context(sys.argv[1])
